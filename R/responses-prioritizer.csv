Timestamp,Which repository or repositories do you handle pull requests for?,What is your favourite PRioritizer feature?,Please rate the usefulness of the following features  [Automatic ordering],Please rate the usefulness of the following features  [Test code filtering],Please rate the usefulness of the following features  [Target branch filtering],Please rate the usefulness of the following features  [Pairwise conflicts inspection/sorting],Please rate the usefulness of the following features  [Contributed commits inspection/sorting],Please rate the usefulness of the following features  [Accept rate inspection/sorting],Please rate the usefulness of the following features  [Size inspection/sorting],What features do you miss from the PRioritizer?,Please rate the usability of the PRioritizer service  [It is easy to get an overview of the state of the pull requests of the project],Please rate the usability of the PRioritizer service  [It is easy to find what pull request to work on next],Please rate the usability of the PRioritizer service  [The filter lacks support for some important fields],Please rate the usability of the PRioritizer service  [Using the prioritizer service causes too much overhead],Please rate the usability of the PRioritizer service  [Some pull requests show incorrect information],What do you like the most about the PRioritizer service?,Please rate the following aspects of the PRioritizer service  [I would use prioritizer for my project],Please rate the following aspects of the PRioritizer service  [I would recommend it to others],Please rate the following aspects of the PRioritizer service  [I like the prioritizer web interface more than GitHub's],Please rate the following aspects of the PRioritizer service  [The performance of prioritizer is adequate],Please rate the following aspects of the PRioritizer service  [The time delay between GitHub and the service is acceptable],Please rate the following features you would like to see in a future version  [Prioritization per integrator instead of per repository (triage)],Please rate the following features you would like to see in a future version  [Support for private repositories],Please rate the following features you would like to see in a future version  [Support for GitHub labels],Please rate the following features you would like to see in a future version  [Filter on pull request type (e.g. fix/refactor/feature/doc)],Please rate the following features you would like to see in a future version  [I would like to have more control over the prioritization (user feedback)],How can we improve the PRioritizer service for your project?,"Would you be available for a short interview over email, Skype or Google Hangouts?"
12/16/2014 16:40:49,"libmesh/libmesh, idaholab/moose","I can see at a glance which PRs can be merged automatically.  For some reason the Github PR interface does not show this, you have to click on a PR to find out if it can be automatically merged.  In one of my projects, PRs often sit unmerged for a while and have to be rebased, so it's better to know when rebasing is necessary sooner, rather than later.",Not so useful,Not so useful,Not so useful,Useful,Not so useful,Not so useful,Not so useful,"Integration with Github's continuous integration API would be cool, i.e. showing which PRs have currently passed continuous integration testing, the way that Github's PR page does.",Strongly agree,Agree,Disagree,Disagree,Disagree,"See ""What is your favourite PRioritizer feature?"" above.",Disagree,Agree,Agree,Agree,Agree,Not so useful,Not so useful,Useful,Useful,Useful,"I think this would be a very useful tool for a project that has lots of PRs.  The projects I work on are relatively small, and I can manage PR prioritization manually well enough.  There are also factors outside the knowledge of the prioritization software (such as ongoing face-to-face team discussions, ""do not merge"" labels, etc.) that can strongly affect the priority of PRs.",jwpeterson@gmail.com
12/16/2014 21:32:32,openstack/tuskar-ui,We do not use it.,Useless,Useless,Useless,Useless,Useless,Useless,Useless,"None, we do not use it.",Strongly disgree,Strongly disgree,Disagree,Strongly agree,Disagree,"Nothing, it's useless for us. We don't use github for code review.",Strongly disgree,Strongly disgree,Strongly disgree,Agree,Agree,Useless,Useless,Useless,Useless,Useless,The only way we could use it in OpenStack is if it could be used with our local Gerrit installation somehow.,
12/17/2014 3:03:44,fatfreecrm/fat_free_crm,The ability to prioritise pull requests is really useful.,Very useful,Very useful,Not so useful,Not so useful,Useful,Not so useful,Not so useful,Haven't used it enough to find anything yet. I have only 4 pull requests so don't feel like I'm pushing the service to the limit yet.,Strongly agree,Strongly agree,Disagree,Disagree,Disagree,Great way to get visibility into the details of the pull request and rank them against each other.,Agree,Agree,Agree,Agree,Agree,Useful,Useful,Not so useful,Not so useful,Very useful,,
12/17/2014 9:46:26,"nukomeet/*, adriengiboire/*",,Useless,Useless,Useless,Useless,Useless,Useless,Useless,,Strongly disgree,Strongly disgree,Strongly disgree,Strongly disgree,Strongly disgree,,Strongly disgree,Strongly disgree,Strongly disgree,Strongly disgree,Strongly disgree,,,,,,Allow people to add their repo when missing.,adrien.giboire@gmail.com
12/17/2014 11:20:22,https://github.com/Activiti/Activiti,"The fact you can see how much the author of the pull request did in the past and how his success % for getting pull requests in. That is really useful information. People that have a track record, will have obviously more chance to have their pull request looked at.",Useful,Very useful,Not so useful,Useful,Very useful,Very useful,Not so useful,"To see which person is working on a pull request. You can set an assignee in Github. This would be useful to take in account, a pull request already taken by someone else is not needed to be looked at.",Strongly agree,Agree,Disagree,Disagree,Disagree,Same as my favourite feature above,Agree,Agree,Disagree,Agree,Disagree,Useful,Not so useful,Useful,Very useful,Very useful,Showing why some pull request was ranked higher.,joram.barrez@gmail.com
12/17/2014 10:25:16,ome/* openmicroscopy/* glencoesoftware/* primarily.,Probably at this point branch / mergeable filtering. Though I see how several of the other features could be useful.,Not so useful,Very useful,Very useful,Useful,Not so useful,Not so useful,Very useful,"The pairwise conflicts limiting needs something to help choosing the conflicting PRs in filtering. A matrix perhaps?

Automatic ordering I don't understand, otherwise it could possibly be useful.

""Accept rate"" is a bit limited. Just because I'm had more ""rejected"" PRs, I'm overall a top contributor. *shrugs*

(to a question below) I have no feeling (yet) for the delay GH and PRioritizer.

I'm unclear on how tests are detected, making me not trust it.

We use labels highly.
",Agree,Disagree,Agree,Disagree,Disagree,(dupe of first question?),Agree,Agree,Disagree,Agree,Disagree,Useful,Not so useful,Very useful,Useful,Useful,,josh@glencoesoftware.com
12/22/2014 10:34:11,"caolan/forms, creationix/nvm, es-shims/es5-shim, paulmillr/es6-shimâ€¦",,Very useful,Useful,Not so useful,Not so useful,Not so useful,Useful,Very useful,"I like the autosorting, but I'd like more control over it - I use labels a lot for things, so for example, ""needs followup"" is a label that means I need to take no action, so I'd love to be able to tell you that.

Also, I'd love to auth with Github so that only collaborators/admins are able to make changes to the data for a repo.",Agree,Agree,Strongly agree,Disagree,Disagree,This is kind of the same as the first question. I like the concept the most I guess.,Agree,Agree,Disagree,Disagree,Disagree,Very useful,Not so useful,Very useful,Very useful,Very useful,Addressed above.,ljharb@gmail.com
12/27/2014 21:00:51,caskroom/homebrew-cask,,Very useful,Not so useful,Not so useful,Not so useful,Useful,Useful,Useful,,Agree,Agree,Disagree,Strongly disgree,Strongly agree,,Strongly agree,Strongly agree,Disagree,Agree,Agree,Very useful,Useless,Useful,Very useful,Very useful,,
12/29/2014 16:29:44,"hpcugent/easybuild-easyblocks, hpcugent/easybuild-framework, hpcugent/easybuild-easyconfigs, hpcugent/easybuild",,Useless,Useful,Not so useful,Not so useful,Useful,Useful,Useful,"- sane ordering, for the repositories I handled the prioritisation makes very little sense (nor could it, since the information I use to prioritise pull requests is missing)

- taking into account votes by pull request by the community, e.g. the sum of +1 and -1 comments in pull requests

- (live) overview of only open pull requests, and *all* of them rather than some of them (is this a snapshot view on the state of things a couple of weeks ago?)",Agree,Strongly disgree,Disagree,Disagree,Agree,has good potential to help out with prioritising pull requests,Disagree,Disagree,Disagree,Agree,Agree,Not so useful,Useful,Useful,Useful,Useful,"- support for taking into account user votes for pull requests
- providing a 'live' view of *open* pull request",kenneth.hoste@ugent.be
1/9/2015 11:59:44,github/Ettercap,,Useful,Useful,Not so useful,Very useful,Very useful,Not so useful,Useless,,Strongly agree,Agree,Disagree,Agree,Disagree,,Agree,Agree,Agree,Strongly agree,Strongly agree,Very useful,Not so useful,Not so useful,Very useful,Very useful,,costamagnagianfranco@yahoo.it
1/9/2015 13:51:31,jenkinsci/jenkins,,Useful,Useful,Not so useful,Not so useful,Very useful,Very useful,Useful,"Not sure if it is already there somewhere, but GitHub status integration. We use CI (a Jenkins plugin) to set a status for all submitted PRs.

Would like a per-organization overview as well as per-repository.",Agree,Agree,Disagree,Disagree,Strongly agree,Provides a richer view of pending requests than the custom-built https://wiki.jenkins-ci.org/display/JENKINS/Pending+Pull+Requests (a wiki page edited by a bot).,Agree,Agree,Disagree,Strongly agree,Agree,Very useful,Very useful,Useless,Not so useful,Useful,"For jenkinsci/jenkins PR #1522 from @darxriggs showed 0% accepted PRs, with a tooltip saying 8 requests and 0 accepted. This linked to https://github.com/jenkinsci/jenkins/pulls?q=is:pr+author:darxriggs which showed 1 open request (#1522), 7 merged, and only 1 rejected. So the acceptance rate should have been 88%.

Would like to filter out PRs whose summary contains the magic string â€œ[WiP]"" (or ""[WIP]""), meaning works in progress.",jglick@cloudbees.com
1/10/2015 15:22:38,saltstack/salt,,Not so useful,Not so useful,Useful,Very useful,Useful,Not so useful,Very useful,"We use a battery of Jenkins tests to decide how viable a merge is. There's a lot of information to be shown from those, but it's critical information from us.

While I don't expect it all to be shown in this view, it would be nice to at least see the `Failed` icon.",Strongly agree,Agree,Agree,Disagree,Disagree,"I like seeing more information at a time for multiple pull requests. Offhand it doesn't look like much more information than Github shows, but it still is more. I also like how much bigger the status icons are, and the fact that they actually show status.",Agree,Agree,Disagree,Disagree,Disagree,Very useful,Very useful,Very useful,Useful,Very useful,"During business hours, we like to keep a close eye on pull requests. Documentation PRs often get merged within minutes, and code PRs are often merged as soon as the tests pass. It's not reasonable for us to use a service that doesn't have immediate updates from Github.",perlhoser@gmail.com
1/11/2015 4:34:43,buttonmen-dev/buttonmen,,Useful,Not so useful,Useless,Not so useful,Not so useful,Not so useful,Not so useful,"A graphical/visual view of the commit history, much like the network",Agree,Agree,Disagree,Disagree,Disagree,"Simplicity, and easy view of mergeability",Agree,Agree,Disagree,Agree,Strongly agree,Useful,Useful,Not so useful,Not so useful,Not so useful,,
1/11/2015 17:44:33,citation-style-language/styles,,Useful,Useful,Useful,Useful,Useful,Useful,Useful,"* An indication per pull request about what properties contribute most to its high or low ranking.
* Filtering by CI status (like Travis CI), see https://github.com/blog/1935-see-results-from-all-pull-request-status-checks",Disagree,Agree,Agree,Disagree,Agree,"Easy filtering of pull requests, highlighting of those that might be easy to accept.",Disagree,Disagree,Disagree,Agree,Agree,Useful,Useful,Useful,Not so useful,Useful,"* http://ghtorrent.org/prioritizer/#/display/citation-style-language/styles/7a34a96e26/?hasTestCode=true lists https://github.com/citation-style-language/styles/pull/1311 and https://github.com/citation-style-language/styles/pull/1167, but neither pull request has any changes made to test code.

* the text ""pull request #"" for the ""Conflicts"" filter is cut off from the bottom in Firefox.
* Opening the ""Help"" link in a new tab via a right-click results in a 404.",rintze.zelle@gmail.com
1/12/2015 4:14:30,playframework/*,,Useless,Not so useful,Not so useful,Not so useful,Not so useful,Not so useful,Not so useful,,Disagree,Disagree,Disagree,Agree,Disagree,"I actually don't find it very useful at all.  I've never had a problem prioritising pull requests, we keep the number of open pull requests below 30, and generally I respond to all pull requests raised on the project as soon as I receive the notification for them (each day I go through my GitHub notifications).  So pull requests on my project, from my perspective, have three states:

1. Has pending activity that I haven't actioned yet but am about to action within the next day or so when I next see the notification for that activity.
2. Is waiting on submitter to update something due to feedback that I've given.
3. Is merged or rejected.

Pull requests in state 2 or 3 have no need to be prioritised for me, because there's no action for me to take on them.  Pull requests in 1, I just work through these in my notifications from top to bottom.  There's no need to prioritise them, since I'm going to get through them all each day anyway.",Disagree,Disagree,Disagree,Disagree,Disagree,Not so useful,Not so useful,Not so useful,Not so useful,Not so useful,,
1/12/2015 13:54:49,owncloud/core,,Useful,Very useful,Very useful,Very useful,Useful,Not so useful,Useful,"We have a review process in place. We need to have two developers to review one PR and once they are fine with it, they give a :+1: (thumbs up). So filtering for a already reviewed PR (that simply needs a second review - four eyes principle) would be nice. Maybe something like a term that needs to be matched per commend, would help a lot.

Also introducing the test result reported back from Travis, Jenkins, Scrutinizer, etc (in the github list shown as a green check mark/all tests are successful, a yellow dot/processing, red cross/at least one failed) would really enhance this service.

We also add some labels to mark the state of a PR (The ones that comes with Huboard) and there especially ""4 - Developing"" and ""5 - To review"" would also be nice to filter. Because then you can simply filter out PRs that are currently worked on an not ready for review.",Strongly agree,Agree,Strongly agree,Strongly disgree,Disagree,"Filtering by mergability, branch and if tests are included. This are things I actually need to look at for every pull request, but which isn't visible in the github overview.",Strongly agree,Agree,Disagree,Agree,Agree,Useful,Very useful,Very useful,Very useful,Very useful,"Oh. Just read until here. I already commented in the above field about stuff that I would like to see in here (test status, github labels).

Feel free to ask further questions if I was unclear. My mail is also below. Thanks for this service :)",hey@morrisjobke.de
1/12/2015 13:56:39,hpcugent/easybuild-easyconfigs,,Very useful,Useful,Not so useful,Useful,Useful,Useful,Not so useful,"I would like to see how merging pull requests can actually influence the community help.
I would also like to be able to filter by labels, 
e.g. we now have feature/bugfix labels for pull requests (or their accompanying issues actually) it would be nice to filter on these.
",Agree,Agree,Agree,Disagree,Disagree,"It can show us the most pressing pull requests. However, it is unclear how this ranking is established, so I'd hope to know why a pull request is considered more urgent then others, 
is this to improve the general feeling in the community, 
or to improve the project? (features/bugs fixed) 
or just based on open time vs activity?",Agree,Agree,Disagree,Agree,Agree,,Useful,Very useful,Very useful,Very useful,,jens.timmerman@gmail.com
1/12/2015 14:46:31,github.com/ansible,,Not so useful,Not so useful,Useful,Useful,Useful,Not so useful,Useful,"See http://ansible.sivel.net/ for pretty much everything I'm looking for here.

Pagination size should also be increased.",Disagree,Disagree,Strongly agree,Disagree,Disagree,"
GitHub pull request management is in fact something that more tools would be welcome for, those I've seen some other things in the space that are a little better because they tell me why, and give me multiple ways to search/sort.",Disagree,Disagree,Disagree,Agree,Agree,Not so useful,Not so useful,Very useful,Very useful,Very useful,,
1/12/2015 16:14:16,w3c/web-platform-tests,,Useless,Not so useful,Not so useful,Useful,Very useful,Useful,Very useful,"It's very difficult to tell what the default ordering means. This might be an inevitable consequence of machine learning but without some insight into why the results were ordered in a certain way (and maybe the ability to tweak the input weights, or something), that view wasn't at all helpful. ",Agree,Strongly disgree,Agree,Disagree,Disagree,"Being able to pull out PRs by regular contributers seems somewhat useful.

It is possible that more features would be useful for a more typical project? web-platform-tests is mostly a repository of test cases which don't fit together in the same way as normal code (e.g. different files are generally isolated or just depend on a small number of other files).",Disagree,Disagree,Disagree,Agree,Agree,Not so useful,Not so useful,Very useful,Not so useful,Very useful,"I think it needs some UI work to make it clear how the existing features work. As well as some indication of why the prioritization comes out the way it does, simple UI changes could make the existing features more obvious e.g. it's not clear that clicking on a PR will being up more information rather than, say, navigating to that PR in GH. Clicking on something like the Conflicts view brings up a list of PRs that is visually indistinguishable from the main list; it should be made clear (not just from the URL) that these particular PRs are those that had conflicts.

Once the UI improves a bit it should be easier to tell if the service has value. At this point it's not clear to me that the central value proposition of the service (an ordered list of PRs in the order which they should be tackled) will actually have enough value to be worth using in practice (I sort of expect that being correct about that kind of thing requires lots of contextual information that is stored in the developer's brains or the code, rather than just in the PRs).",
1/12/2015 20:00:59,"adobe/brackets, adobe/brackets-shell, adober/brackets.io, redmunds/*",,Not so useful,Very useful,Useful,Useful,Useful,Useful,Useful,"Auto-ordering seems cool, but you'd need to know the criteria of the ordering.",Agree,Strongly agree,Disagree,Disagree,Disagree,"Like having more options for filtering. We go though phases where team says ""let's focus on PRs with/without [certain characteristics]""
",Agree,Agree,Disagree,Strongly agree,Disagree,Not so useful,Very useful,Useful,Useful,Useful,"Performance report states: ""The more commits come from pull requests, the more open the project process is to accepting contributions."" We require pull requests both internally and externally, so this doe s not apply.
",
1/14/2015 3:40:51,github/janky jekyll/jekyll,,Useful,Very useful,Not so useful,Not so useful,Useful,Useful,Useful,I wish merged pull requests weren't included in the filtering. I imagine this requires updating the data sources more often.,Agree,Disagree,Disagree,Disagree,Agree,I like how easy it is to filter the various pull requests. I'd hard to tell what filter criteria is applied though. I think the UI/UX around that could be better.,Disagree,Agree,Disagree,Agree,Disagree,Useful,Not so useful,Useful,Useful,Useful,"more real time updates to the service so that merged PRs are removed faster. 

I'd love a filter that lets me order based on the recentness of the last comment. I know GitHub already has this, but I'd like to combine it with the PRioritizer service.",codemattr@gmail.com
